cabal-version: 1.12

name:           RtAudio
version:        0.1.0
synopsis:       Haskell wrapper for RtAudio, the lightweight, cross-platform Audio I/O library.
description:    Please see the README on GitHub at <https://github.com/ejconlon/RtAudio#readme>
category:       Sound
homepage:       https://github.com/ejconlon/RtAudio#readme
bug-reports:    https://github.com/ejconlon/RtAudio/issues
author:         Eric Conlon
maintainer:     ejconlon@gmail.com
copyright:      (c) 2020 Eric Conlon
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files: README.md
                    rtaudio/rtaudio_c.h
                    rtaudio/RtAudio.h

source-repository head
  type: git
  location: https://github.com/ejconlon/haskell-rtaudio

Flag alsa {
  Description:  Enable ALSA api
  Default:      True
}

Flag jack {
  Description:  Enable JACK api
  Default:      False
}

Flag core {
  Description:  Enable CoreAudio api
  Default:      True
}

-- TODO(ejconlon) Add windows support
-- Flag mm {
--   Description:  Enable Windows Multimedia Library api
--   Default:      False
-- }

library
  exposed-modules:     Sound.RtAudio
                     , Sound.RtAudio.Buffers
                     , Sound.RtAudio.Flag
                     , Sound.RtAudio.Report
  other-modules:       Sound.RtAudio.Foreign
  default-language:    Haskell2010
  hs-source-dirs:      src
  build-depends:       base >= 4.12 && < 5
                     , deepseq >= 1.4.4.0 && < 2
                     , unliftio-core >= 0.1.2.0 && < 1
                     , vector >= 0.12.1.2 && < 1
  default-extensions:  DeriveGeneric
                     , DerivingStrategies
                     , DerivingVia
                     , GeneralizedNewtypeDeriving
  include-dirs:        rtaudio
                     , wrapper
  extra-libraries:     stdc++
  c-sources:           rtaudio/RtAudio.cpp
                       rtaudio/rtaudio_c.cpp
                       wrapper/wrapper.cpp
  if flag(alsa) && os(linux)
    cc-options:       -D__LINUX_ALSA__
    extra-libraries:  asound pthread
  if flag(jack) && (os(linux) || os(darwin))
    cc-options:       -D__UNIX_JACK__
    extra-libraries:  jack
  if flag(core) && os(darwin)
    cc-options:       -D__MACOSX_CORE__
    frameworks:       CoreAudio CoreFoundation
    -- NOTE(ejconlon) This is to make the c ffi wrapper actually catch
    -- the c++ exceptions instead of simply aborting.
    -- Cribbed from https://github.com/fpco/inline-c/pull/89
    -- avoid https://gitlab.haskell.org/ghc/ghc/issues/11829
    ld-options:        -Wl,-keep_dwarf_unwind
    ghc-options:       -pgmc=clang++
  -- TODO(ejconlon) Add windows support

executable rtaudio-report
  main-is:            report.hs
  hs-source-dirs:     examples
  build-depends:
      base
    , RtAudio
    , pretty-simple >= 3.2.3.0 && < 4
  default-language:   Haskell2010
  ghc-options: -threaded -rtsopts

test-suite rtaudio-test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: test
  build-depends:
      base
    , RtAudio
    , tasty >= 1.2.3 && < 2
    , tasty-hunit >= 0.10.0.2 && < 1
  default-language:   Haskell2010
  ghc-options: -threaded -rtsopts
